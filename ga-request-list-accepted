#!/usr/bin/env bash

APIURL='https://api.suse.de/'

usage() {
    printf "Usage: %s [-a api_url] [-d days] [-f from_date] -p project\n" $(basename $0)
}

days_from () {
    from_date="$1"
    days_diff=$(( (`date -d "00:00" +%s` - `date -d "$from_date" +%s`) / (24*3600) ));
    [ "$days_diff" -lt 0 ] && echo "${from_date} is in the future!" >&2 && exit 1
    printf "%s" "$days_diff"
}

while getopts "a:p:d:f:" opt; do
    case $opt in
        a)
            APIURL=${OPTARG}
            ;;
        p)
            PROJECT=${OPTARG}
            ;;
        d)
            DAYS="-D ${OPTARG}"
            ;;
        f)
            DAYS="-D $(days_from ${OPTARG})"
            ;;
        ?)
            usage
            exit 1
            ;;
    esac
done

if [ -z "${PROJECT}" ] ; then
    usage
    exit 1
fi


ex <(osc -A ${APIURL} request list -t submit ${DAYS} -s accepted ${PROJECT}) << EOF
# cleanup input
v/^[[:digit:]]\|submit:/d
# join lines 2 by 2
g/./j
# format output: {timestamp} {package_name} https://build.suse.de/request/show/{request_id}
%s;\(^[[:digit:]]*\) .*When:\(.*[[:digit:]]\).*submit:.*/\(.*\)@.*;\2 \3 https://build.suse.de/request/show/\1;
# sort output by timestamp
%!sort
0i
==============================
SUBMIT REQUESTS
==============================
.
%p
q!
EOF

ex <(osc -A ${APIURL} request list -t delete ${DAYS} -s accepted ${PROJECT}) << EOF
# cleanup input
v/^[[:digit:]]\|delete:/d
# join lines 2 by 2
g/./j
# format output: {timestamp} {package_name} https://build.suse.de/request/show/{request_id}
%s;\(^[[:digit:]]*\) .*When:\(.*[[:digit:]]\).*delete:.*/\(.*\);\2 \3 https://build.suse.de/request/show/\1;
# sort output by timestamp
%!sort
0i
==============================
DELETE REQUESTS
==============================
.
%p
q!
EOF
